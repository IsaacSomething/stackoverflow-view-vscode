{"version":3,"sources":["../webpack/bootstrap","../external \"vscode\"","../external \"path\"",".././src/extension.ts",".././src/extension-model.ts",".././src/app-page.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","createWebViewPanel","panelTitle","path","vscode","window","createWebviewPanel","ViewColumn","Beside","localResourceRoots","Uri","file","posix","join","enableScripts","retainContextWhenHidden","windowProgress","panel","webview","onDidReceiveMessage","message","command","action","title","withProgress","location","ProgressLocation","Window","progress","token","Promise","resolve","error","showErrorMessage","errorMessage","showWindowProgress","context","searchStackoverflow","commands","registerCommand","showInputBox","placeHolder","prompt","then","searchQuery","currentLanguageSelection","workspace","getConfiguration","currentSortTypeSelection","stackoverflowPanel","extensionPath","html","AppPageHtml","postMessage","query","language","sortType","changeWindowTitle","topPickStackoverflow","showQuickPick","ExtensionModel","topPickQuickInputItems","selectedTopPick","selectedArticle","topPickIds","find","element","label","languages","questionId","id","gif","subscriptions","push","detail","contextPath","iconPath","with","scheme"],"mappings":"2BACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,gBClFrDhC,EAAOD,QAAUkC,QAAQ,W,cCAzBjC,EAAOD,QAAUkC,QAAQ,S,8ECAzB,aACA,OACA,OACA,OA8FA,SAASC,EAAmBC,EAAoBC,GAC9C,OAAOC,EAAOC,OAAOC,mBAAmB,UAAWJ,EAAYE,EAAOG,WAAWC,OAAQ,CACvFC,mBAAoB,CAACL,EAAOM,IAAIC,KAAK,EAAAC,MAAMC,KAAKV,EAAM,MAAO,YAC7DW,eAAe,EACfC,yBAAyB,IAI7B,SAASC,EAAeC,GACtBA,EAAMC,QAAQC,oBAAoBC,IACR,aAApBA,EAAQC,SAA6C,UAAnBD,EAAQE,QAMlD,SAA4BL,EAA4BM,GACtDnB,EAAOC,OAAOmB,aAAa,CACzBC,SAAUrB,EAAOsB,iBAAiBC,OAClCJ,MAAOA,GACN,CAACK,EAAUC,KAeZ,OAbwB,IAAIC,QAAQC,IAClCd,EAAMC,QAAQC,oBAAoBC,IAER,aAApBA,EAAQC,SAA6C,SAAnBD,EAAQE,SAC5CS,IACIX,EAAQY,OACV5B,EAAOC,OAAO4B,iBAAiBb,EAAQc,qBAjB7CC,CAAmBlB,EAAOG,EAAQG,SAvGxC,oBAAyBa,GAKvB,IAAIC,EAAsBjC,EAAOkC,SAASC,gBAAgB,gCAAiC,KASzFnC,EAAOC,OAAOmC,aANgC,CAC5CC,YAAa,uBACbC,OAAQ,cAIgCC,KAAMC,IAE9C,GAAIA,EAAa,CAGf,MAAMC,EAA2BzC,EAAO0C,UAAUC,mBAAmBlE,IAAI,+BAEnEmE,EAA2B5C,EAAO0C,UAAUC,mBAAmBlE,IAAI,2BAEnEoE,EAAqBhD,SAA0B2C,IAAeR,EAAQc,eAE5ED,EAAmB/B,QAAQiC,KAAO,EAAAC,YAAYhB,EAAQc,cAAeD,GAErEA,EAAmB/B,QAAQmC,YAAY,CACrC/B,OAAQ,SACRgC,MAAOV,EACPW,SAAUV,EACVW,SAAUR,IAIZhC,EAAeiC,GAqGvB,SAA2BhC,GACzBA,EAAMC,QAAQC,oBAAoBC,IACR,gBAApBA,EAAQC,UACVJ,EAAMM,MAAQH,EAAQG,SArGpBkC,CAAkBR,QAUpBS,EAAuBtD,EAAOkC,SAASC,gBAAgB,iCAAkC,KAE3FnC,EAAOC,OAAOsD,cAAc,EAAAC,eAAeC,wBAAwBlB,KAAMmB,IAEvE,GAAIA,EAAiB,CAGnB,MAAMC,EAAuB,EAAAH,eAAeI,WAAWC,KAAMC,GACpDA,EAAQC,QAAUL,EAAgBK,OAIrCZ,EAAgB,EAAAK,eAAeQ,UAAU,GAGzCnB,EAAqBhD,SAA0B6D,EAAgBK,QAAS/B,EAAQc,eAEtFD,EAAmB/B,QAAQiC,KAAO,EAAAC,YAAYhB,EAAQc,cAAeD,GAErEA,EAAmB/B,QAAQmC,YAAY,CACrC/B,OAAQ,UACRiC,SAAUA,EACVc,WAAYN,EAAgBO,GAC5BH,MAAOJ,EAAgBI,MACvBI,IAAKR,EAAgBQ,MAIvBvD,EAAeiC,QAMrBb,EAAQoC,cAAcC,KAAKpC,GAC3BD,EAAQoC,cAAcC,KAAKf,IA6D7B,2B,8ECnJA,MAAaE,GAEY,EAAAQ,UAAY,CACjC,CAAEb,SAAU,WACZ,CAAEA,SAAU,WACZ,CAAEA,SAAU,WACZ,CAAEA,SAAU,cACZ,CAAEA,SAAU,aAGS,EAAAM,uBAA0C,CAAC,CAChEM,MAAO,gDACPO,OAAQ,gBACP,CACDP,MAAO,8CACPO,OAAQ,gBACP,CACDP,MAAO,qEACPO,OAAQ,gBACP,CACDP,MAAO,6CACPO,OAAQ,iBACP,CACDP,MAAO,qDACPO,OAAQ,eACP,CACDP,MAAO,6BACPO,OAAQ,gBACP,CACDP,MAAO,qDACPO,OAAQ,iBACP,CACDP,MAAO,oDACPO,OAAQ,eACP,CACDP,MAAO,8EACPO,OAAQ,gBACP,CACDP,MAAO,+FACPO,OAAQ,gBACP,CACDP,MAAO,sDACPO,OAAQ,iBAGa,EAAAV,WAAa,CAAC,CACnCG,MAAO,gDACPG,GAAI,UACJC,IAAK,yCACJ,CACDJ,MAAO,8CACPG,GAAI,QACJC,IAAK,yCACJ,CACDJ,MAAO,qEACPG,GAAI,SACJC,IAAK,yCACJ,CACDJ,MAAO,6CACPG,GAAI,WACJC,IAAK,yCACJ,CACDJ,MAAO,qDACPG,GAAI,SACJC,IAAK,8CACJ,CACDJ,MAAO,6BACPG,GAAI,UACJC,IAAK,8CACJ,CACDJ,MAAO,qDACPG,GAAI,UACJC,IAAK,yCACJ,CACDJ,MAAO,oDACPG,GAAI,SACJC,IAAK,8CACJ,CACDJ,MAAO,8EACPG,GAAI,SACJC,IAAK,yCACJ,CACDJ,MAAO,+FACPG,GAAI,SACJC,IAAK,yCACJ,CACDJ,MAAO,sDACPG,GAAI,SACJC,IAAK,+CAxFT,oB,8ECDA,aACA,OAEA,uBAA4BI,EAAqB1D,GAM/C,OAJAA,EAAM2D,SAAW,EAAAlE,IAAIC,KAAK,EAAAC,MAAMC,KAAK8D,EAAa,MAAO,SAAU,8gBAC5C,EAAAjE,IAAIC,KAAK,EAAAC,MAAMC,KAAK8D,EAAa,MAAO,SAAU,eAAeE,KAAK,CAAEC,OAAQ,+DAChF,EAAApE,IAAIC,KAAK,EAAAC,MAAMC,KAAK8D,EAAa,MAAO,SAAU,eAAeE,KAAK,CAAEC,OAAQ,uDACnF,EAAApE,IAAIC,KAAK,EAAAC,MAAMC,KAAK8D,EAAa,MAAO,SAAU,cAAcE,KAAK,CAAEC,OAAQ","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = require(\"vscode\");","module.exports = require(\"path\");","import * as vscode from 'vscode';\r\nimport { ExtensionModel } from './extension-model';\r\nimport { posix } from 'path';\r\nimport { AppPageHtml } from './app-page';\r\n\r\nexport function activate(context: vscode.ExtensionContext) {\r\n\r\n  /**\r\n   * General stackoverflow question\r\n   */\r\n  let searchStackoverflow = vscode.commands.registerCommand('extension.searchStackoverflow', () => {\r\n\r\n    // Search options\r\n    const searchOptions: vscode.InputBoxOptions = {\r\n      placeHolder: 'Search Stackoverflow',\r\n      prompt: '*Required',\r\n    };\r\n\r\n    // Show Input\r\n    vscode.window.showInputBox(searchOptions).then((searchQuery: string | undefined) => {\r\n\r\n      if (searchQuery) {\r\n\r\n        // Get language\r\n        const currentLanguageSelection = vscode.workspace.getConfiguration().get('stackoverflow.view.language');\r\n        // Get sort type\r\n        const currentSortTypeSelection = vscode.workspace.getConfiguration().get('stackoverflow.view.sort');\r\n        // Create webview panel\r\n        const stackoverflowPanel = createWebViewPanel(`SO: ${searchQuery}`, context.extensionPath);\r\n        // Set webview - svelte - built to ./app/public/*\r\n        stackoverflowPanel.webview.html = AppPageHtml(context.extensionPath, stackoverflowPanel);\r\n        // Post search term, read in App.svelte as window.addEventListener(\"message\"\r\n        stackoverflowPanel.webview.postMessage({\r\n          action: 'search',\r\n          query: searchQuery,\r\n          language: currentLanguageSelection,\r\n          sortType: currentSortTypeSelection\r\n        });\r\n\r\n        // Show progress loader\r\n        windowProgress(stackoverflowPanel);\r\n\r\n        // Listen for changes to window title\r\n        changeWindowTitle(stackoverflowPanel);\r\n\r\n      }\r\n\r\n    });\r\n  });\r\n\r\n  /**\r\n   * Top pick stackoverflow articles\r\n   */\r\n  let topPickStackoverflow = vscode.commands.registerCommand('extension.topPickStackoverflow', () => {\r\n\r\n    vscode.window.showQuickPick(ExtensionModel.topPickQuickInputItems).then((selectedTopPick: vscode.QuickPickItem | undefined) => {\r\n\r\n      if (selectedTopPick) {\r\n\r\n        // Get article selected artical with ID\r\n        const selectedArticle: any = ExtensionModel.topPickIds.find((element: any) => {\r\n          return element.label === selectedTopPick.label;\r\n        });\r\n\r\n        // Get language\r\n        const language: any = ExtensionModel.languages[0];\r\n\r\n        // Create webview panel\r\n        const stackoverflowPanel = createWebViewPanel(`SO: ${selectedTopPick.label}`, context.extensionPath);\r\n        // Set webview - svelte built to ./app/public/*\r\n        stackoverflowPanel.webview.html = AppPageHtml(context.extensionPath, stackoverflowPanel);\r\n        // Post article Id to app, read in App.svelte as window.addEventListener(\"message\"\r\n        stackoverflowPanel.webview.postMessage({\r\n          action: 'topPick',\r\n          language: language,\r\n          questionId: selectedArticle.id,\r\n          label: selectedArticle.label,\r\n          gif: selectedArticle.gif\r\n        });\r\n\r\n        // Show progress loader\r\n        windowProgress(stackoverflowPanel);\r\n\r\n      }\r\n    });\r\n  });\r\n\r\n  context.subscriptions.push(searchStackoverflow);\r\n  context.subscriptions.push(topPickStackoverflow);\r\n\r\n}\r\n\r\n/**\r\n * Create vscode webViewPanel - sets default html with connection to /app\r\n * @param panelTitle string\r\n * @param path string\r\n */\r\nfunction createWebViewPanel(panelTitle: string, path: string): vscode.WebviewPanel {\r\n  return vscode.window.createWebviewPanel('webview', panelTitle, vscode.ViewColumn.Beside, {\r\n    localResourceRoots: [vscode.Uri.file(posix.join(path, 'app', 'public'))],\r\n    enableScripts: true,\r\n    retainContextWhenHidden: true\r\n  });\r\n}\r\n\r\nfunction windowProgress(panel: vscode.WebviewPanel) {\r\n  panel.webview.onDidReceiveMessage(message => {\r\n    if (message.command === 'progress' && message.action === 'start') {\r\n      showWindowProgress(panel, message.title);\r\n    }\r\n  });\r\n}\r\n\r\nfunction showWindowProgress(panel: vscode.WebviewPanel, title: string) {\r\n  vscode.window.withProgress({\r\n    location: vscode.ProgressLocation.Window,\r\n    title: title\r\n  }, (progress, token) => {\r\n\r\n    const progressPromise = new Promise(resolve => {\r\n      panel.webview.onDidReceiveMessage(message => {\r\n\r\n        if (message.command === 'progress' && message.action === 'stop') {\r\n          resolve();\r\n          if (message.error) {\r\n            vscode.window.showErrorMessage(message.errorMessage);\r\n          }\r\n        }\r\n\r\n      });\r\n    });\r\n\r\n    return progressPromise;\r\n\r\n  });\r\n}\r\n\r\n/**\r\n * Change window title based on user actions in the app\r\n * @param panel webview panel\r\n */\r\nfunction changeWindowTitle(panel: vscode.WebviewPanel) {\r\n  panel.webview.onDidReceiveMessage(message => {\r\n    if (message.command === 'titleChange') {\r\n      panel.title = message.title;\r\n    }\r\n  });\r\n}\r\n\r\nexport function deactivate() { }\r\n","import { QuickPickItem } from 'vscode';\r\n\r\nexport class ExtensionModel {\r\n\r\n  public static readonly languages = [\r\n    { language: 'English' },\r\n    { language: 'Spanish' },\r\n    { language: 'Russian' },\r\n    { language: 'Portuguese' },\r\n    { language: 'Japanese' },\r\n  ];\r\n\r\n  public static readonly topPickQuickInputItems: QuickPickItem[] = [{\r\n    label: 'Why does HTML think \"chucknorris\" is a color?',\r\n    detail: '712 up votes'\r\n  }, {\r\n    label: 'What\\'s your favorite \"programmer\" cartoon?',\r\n    detail: '835 up votes'\r\n  }, {\r\n    label: 'What is the best comment in source code you have ever encountered?',\r\n    detail: '360 up votes'\r\n  }, {\r\n    label: 'How to pair socks from a pile efficiently?',\r\n    detail: '3810 up votes'\r\n  }, {\r\n    label: 'What\\'s the difference between JavaScript and Java?',\r\n    detail: '77 up votes'\r\n  }, {\r\n    label: 'Strangest language feature',\r\n    detail: '975 up votes'\r\n  }, {\r\n    label: 'Why does ++[[]][+[]]+[+[]] return the string \"10\"?',\r\n    detail: '1582 up votes'\r\n  }, {\r\n    label: 'What\\'s the least useful comment you\\'ve ever seen?',\r\n    detail: '20 up votes'\r\n  }, {\r\n    label: 'What was the strangest coding standard rule that you were forced to follow?',\r\n    detail: '173 up votes'\r\n  }, {\r\n    label: 'What is the coolest thing you can do in <10 lines of simple code? Help me inspire beginners!',\r\n    detail: '406 up votes'\r\n  }, {\r\n    label: 'What\\'s your most controversial programming opinion?',\r\n    detail: '363 up votes'\r\n  }];\r\n\r\n  public static readonly topPickIds = [{\r\n    label: 'Why does HTML think \"chucknorris\" is a color?',\r\n    id: '8318911',\r\n    gif: 'https://giphy.com/embed/3yhmYJ0A5lQv6'\r\n  }, {\r\n    label: 'What\\'s your favorite \"programmer\" cartoon?',\r\n    id: '84556',\r\n    gif: 'https://giphy.com/embed/Qc4i40SWi42rK'\r\n  }, {\r\n    label: 'What is the best comment in source code you have ever encountered?',\r\n    id: '184618',\r\n    gif: 'https://giphy.com/embed/ZHlGzvZb130nm'\r\n  }, {\r\n    label: 'How to pair socks from a pile efficiently?',\r\n    id: '14415881',\r\n    gif: 'https://giphy.com/embed/y65VoOlimZaus'\r\n  }, {\r\n    label: 'What\\'s the difference between JavaScript and Java?',\r\n    id: '245062',\r\n    gif: 'https://giphy.com/embed/l36kU80xPf0ojG0Erg'\r\n  }, {\r\n    label: 'Strangest language feature',\r\n    id: '1995113',\r\n    gif: 'https://giphy.com/embed/5WhcSpUjK02f30sDQr'\r\n  }, {\r\n    label: 'Why does ++[[]][+[]]+[+[]] return the string \"10\"?',\r\n    id: '7202157',\r\n    gif: 'https://giphy.com/embed/8fjedJmOkkcTu'\r\n  }, {\r\n    label: 'What\\'s the least useful comment you\\'ve ever seen?',\r\n    id: '143429',\r\n    gif: 'https://giphy.com/embed/lz67zZWfWPsWnuGH0s'\r\n  }, {\r\n    label: 'What was the strangest coding standard rule that you were forced to follow?',\r\n    id: '218123',\r\n    gif: 'https://giphy.com/embed/c4u2gld3Or69i'\r\n  }, {\r\n    label: 'What is the coolest thing you can do in <10 lines of simple code? Help me inspire beginners!',\r\n    id: '811074',\r\n    gif: 'https://giphy.com/embed/Z543HuFdQAmkg'\r\n  }, {\r\n    label: 'What\\'s your most controversial programming opinion?',\r\n    id: '406760',\r\n    gif: 'https://giphy.com/embed/UTY42CoHu6wixtxTDh'\r\n  }];\r\n\r\n}","import { WebviewPanel } from 'vscode';\r\nimport { Uri } from 'vscode';\r\nimport { posix } from 'path';\r\n\r\nexport function AppPageHtml(contextPath: string, panel: WebviewPanel) {\r\n\r\n  panel.iconPath = Uri.file(posix.join(contextPath, 'src', 'images', 'logo-sml.png'));\r\n  const cssGlobal: Uri = Uri.file(posix.join(contextPath, 'app', 'public', 'global.css')).with({ scheme: 'vscode-resource' });\r\n  const cssBundle: Uri = Uri.file(posix.join(contextPath, 'app', 'public', 'bundle.css')).with({ scheme: 'vscode-resource' });\r\n  const jsFile: Uri = Uri.file(posix.join(contextPath, 'app', 'public', 'bundle.js')).with({ scheme: 'vscode-resource' });\r\n  return `\r\n    <!doctype html>\r\n    <html>\r\n\r\n      <head>\r\n        <meta charset='utf8'>\r\n        <meta name='viewport' content='width=device-width'>\r\n        <meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'self';frame-src https://giphy.com/; connect-src https://api.stackexchange.com/2.2/; img-src vscode-resource: https:; script-src vscode-resource:; style-src vscode-resource: 'unsafe-inline';\" />\r\n\r\n        <title> Learn In Visual Studio Code </title>\r\n\r\n        <link rel='stylesheet' href='${cssGlobal}'>\r\n        <link rel='stylesheet' href='${cssBundle}'>\r\n\r\n        <script defer src='${jsFile}'></script>\r\n        \r\n      </head>\r\n\r\n      <body></body>\r\n\r\n    </html>`;\r\n}"],"sourceRoot":""}